Traceback (most recent call last):
  File "//anaconda3/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "//anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "//anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "//anaconda3/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
rawCOVID=pd.read_json("https://data.cityofchicago.org/resource/yhhz-zm2v.json?$limit=5000000")
rawCOVID.head(1)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mgaierror[0m                                  Traceback (most recent call last)
File [0;32m//anaconda3/lib/python3.10/urllib/request.py:1348[0m, in [0;36mAbstractHTTPHandler.do_open[0;34m(self, http_class, req, **http_conn_args)[0m
[1;32m   1347[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1348[0m     [43mh[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mreq[49m[38;5;241;43m.[39;49m[43mget_method[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mreq[49m[38;5;241;43m.[39;49m[43mselector[49m[43m,[49m[43m [49m[43mreq[49m[38;5;241;43m.[39;49m[43mdata[49m[43m,[49m[43m [49m[43mheaders[49m[43m,[49m
[1;32m   1349[0m [43m              [49m[43mencode_chunked[49m[38;5;241;43m=[39;49m[43mreq[49m[38;5;241;43m.[39;49m[43mhas_header[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mTransfer-encoding[39;49m[38;5;124;43m'[39;49m[43m)[49m[43m)[49m
[1;32m   1350[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m

File [0;32m//anaconda3/lib/python3.10/http/client.py:1282[0m, in [0;36mHTTPConnection.request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1281[0m [38;5;250m[39m[38;5;124;03m"""Send a complete request to the server."""[39;00m
[0;32m-> 1282[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_send_request[49m[43m([49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mbody[49m[43m,[49m[43m [49m[43mheaders[49m[43m,[49m[43m [49m[43mencode_chunked[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/http/client.py:1328[0m, in [0;36mHTTPConnection._send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1327[0m     body [38;5;241m=[39m _encode(body, [38;5;124m'[39m[38;5;124mbody[39m[38;5;124m'[39m)
[0;32m-> 1328[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mendheaders[49m[43m([49m[43mbody[49m[43m,[49m[43m [49m[43mencode_chunked[49m[38;5;241;43m=[39;49m[43mencode_chunked[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/http/client.py:1277[0m, in [0;36mHTTPConnection.endheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1276[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[0;32m-> 1277[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_send_output[49m[43m([49m[43mmessage_body[49m[43m,[49m[43m [49m[43mencode_chunked[49m[38;5;241;43m=[39;49m[43mencode_chunked[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/http/client.py:1037[0m, in [0;36mHTTPConnection._send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1036[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[0;32m-> 1037[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mmsg[49m[43m)[49m
[1;32m   1039[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1040[0m 
[1;32m   1041[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [0;32m//anaconda3/lib/python3.10/http/client.py:975[0m, in [0;36mHTTPConnection.send[0;34m(self, data)[0m
[1;32m    974[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[0;32m--> 975[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[1;32m    976[0m [38;5;28;01melse[39;00m:

File [0;32m//anaconda3/lib/python3.10/http/client.py:1447[0m, in [0;36mHTTPSConnection.connect[0;34m(self)[0m
[1;32m   1445[0m [38;5;124m"[39m[38;5;124mConnect to a host on a given (SSL) port.[39m[38;5;124m"[39m
[0;32m-> 1447[0m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[1;32m   1449[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_tunnel_host:

File [0;32m//anaconda3/lib/python3.10/http/client.py:941[0m, in [0;36mHTTPConnection.connect[0;34m(self)[0m
[1;32m    940[0m sys[38;5;241m.[39maudit([38;5;124m"[39m[38;5;124mhttp.client.connect[39m[38;5;124m"[39m, [38;5;28mself[39m, [38;5;28mself[39m[38;5;241m.[39mhost, [38;5;28mself[39m[38;5;241m.[39mport)
[0;32m--> 941[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_create_connection[49m[43m([49m
[1;32m    942[0m [43m    [49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mhost[49m[43m,[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mport[49m[43m)[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msource_address[49m[43m)[49m
[1;32m    943[0m [38;5;66;03m# Might fail in OSs that don't implement TCP_NODELAY[39;00m

File [0;32m//anaconda3/lib/python3.10/socket.py:824[0m, in [0;36mcreate_connection[0;34m(address, timeout, source_address)[0m
[1;32m    823[0m err [38;5;241m=[39m [38;5;28;01mNone[39;00m
[0;32m--> 824[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[43mSOCK_STREAM[49m[43m)[49m:
[1;32m    825[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

File [0;32m//anaconda3/lib/python3.10/socket.py:955[0m, in [0;36mgetaddrinfo[0;34m(host, port, family, type, proto, flags)[0m
[1;32m    954[0m addrlist [38;5;241m=[39m []
[0;32m--> 955[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43m_socket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[38;5;28;43mtype[39;49m[43m,[49m[43m [49m[43mproto[49m[43m,[49m[43m [49m[43mflags[49m[43m)[49m:
[1;32m    956[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

[0;31mgaierror[0m: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mURLError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[2], line 1[0m
[0;32m----> 1[0m rawCOVID[38;5;241m=[39m[43mpd[49m[38;5;241;43m.[39;49m[43mread_json[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mhttps://data.cityofchicago.org/resource/yhhz-zm2v.json?$limit=5000000[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      2[0m rawCOVID[38;5;241m.[39mhead([38;5;241m1[39m)

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/json/_json.py:760[0m, in [0;36mread_json[0;34m(path_or_buf, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, precise_float, date_unit, encoding, encoding_errors, lines, chunksize, compression, nrows, storage_options, dtype_backend, engine)[0m
[1;32m    757[0m [38;5;28;01mif[39;00m convert_axes [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m orient [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mtable[39m[38;5;124m"[39m:
[1;32m    758[0m     convert_axes [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 760[0m json_reader [38;5;241m=[39m [43mJsonReader[49m[43m([49m
[1;32m    761[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m    762[0m [43m    [49m[43morient[49m[38;5;241;43m=[39;49m[43morient[49m[43m,[49m
[1;32m    763[0m [43m    [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mtyp[49m[43m,[49m
[1;32m    764[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m
[1;32m    765[0m [43m    [49m[43mconvert_axes[49m[38;5;241;43m=[39;49m[43mconvert_axes[49m[43m,[49m
[1;32m    766[0m [43m    [49m[43mconvert_dates[49m[38;5;241;43m=[39;49m[43mconvert_dates[49m[43m,[49m
[1;32m    767[0m [43m    [49m[43mkeep_default_dates[49m[38;5;241;43m=[39;49m[43mkeep_default_dates[49m[43m,[49m
[1;32m    768[0m [43m    [49m[43mprecise_float[49m[38;5;241;43m=[39;49m[43mprecise_float[49m[43m,[49m
[1;32m    769[0m [43m    [49m[43mdate_unit[49m[38;5;241;43m=[39;49m[43mdate_unit[49m[43m,[49m
[1;32m    770[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    771[0m [43m    [49m[43mlines[49m[38;5;241;43m=[39;49m[43mlines[49m[43m,[49m
[1;32m    772[0m [43m    [49m[43mchunksize[49m[38;5;241;43m=[39;49m[43mchunksize[49m[43m,[49m
[1;32m    773[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    774[0m [43m    [49m[43mnrows[49m[38;5;241;43m=[39;49m[43mnrows[49m[43m,[49m
[1;32m    775[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    776[0m [43m    [49m[43mencoding_errors[49m[38;5;241;43m=[39;49m[43mencoding_errors[49m[43m,[49m
[1;32m    777[0m [43m    [49m[43mdtype_backend[49m[38;5;241;43m=[39;49m[43mdtype_backend[49m[43m,[49m
[1;32m    778[0m [43m    [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m
[1;32m    779[0m [43m[49m[43m)[49m
[1;32m    781[0m [38;5;28;01mif[39;00m chunksize:
[1;32m    782[0m     [38;5;28;01mreturn[39;00m json_reader

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/json/_json.py:861[0m, in [0;36mJsonReader.__init__[0;34m(self, filepath_or_buffer, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, precise_float, date_unit, encoding, lines, chunksize, compression, nrows, storage_options, encoding_errors, dtype_backend, engine)[0m
[1;32m    859[0m     [38;5;28mself[39m[38;5;241m.[39mdata [38;5;241m=[39m filepath_or_buffer
[1;32m    860[0m [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mengine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mujson[39m[38;5;124m"[39m:
[0;32m--> 861[0m     data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_data_from_filepath[49m[43m([49m[43mfilepath_or_buffer[49m[43m)[49m
[1;32m    862[0m     [38;5;28mself[39m[38;5;241m.[39mdata [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_preprocess_data(data)

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/json/_json.py:901[0m, in [0;36mJsonReader._get_data_from_filepath[0;34m(self, filepath_or_buffer)[0m
[1;32m    894[0m filepath_or_buffer [38;5;241m=[39m stringify_path(filepath_or_buffer)
[1;32m    895[0m [38;5;28;01mif[39;00m (
[1;32m    896[0m     [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(filepath_or_buffer, [38;5;28mstr[39m)
[1;32m    897[0m     [38;5;129;01mor[39;00m is_url(filepath_or_buffer)
[1;32m    898[0m     [38;5;129;01mor[39;00m is_fsspec_url(filepath_or_buffer)
[1;32m    899[0m     [38;5;129;01mor[39;00m file_exists(filepath_or_buffer)
[1;32m    900[0m ):
[0;32m--> 901[0m     [38;5;28mself[39m[38;5;241m.[39mhandles [38;5;241m=[39m [43mget_handle[49m[43m([49m
[1;32m    902[0m [43m        [49m[43mfilepath_or_buffer[49m[43m,[49m
[1;32m    903[0m [43m        [49m[38;5;124;43m"[39;49m[38;5;124;43mr[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    904[0m [43m        [49m[43mencoding[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mencoding[49m[43m,[49m
[1;32m    905[0m [43m        [49m[43mcompression[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcompression[49m[43m,[49m
[1;32m    906[0m [43m        [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    907[0m [43m        [49m[43merrors[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mencoding_errors[49m[43m,[49m
[1;32m    908[0m [43m    [49m[43m)[49m
[1;32m    909[0m     filepath_or_buffer [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhandles[38;5;241m.[39mhandle
[1;32m    910[0m [38;5;28;01melif[39;00m (
[1;32m    911[0m     [38;5;28misinstance[39m(filepath_or_buffer, [38;5;28mstr[39m)
[1;32m    912[0m     [38;5;129;01mand[39;00m filepath_or_buffer[38;5;241m.[39mlower()[38;5;241m.[39mendswith(
[0;32m   (...)[0m
[1;32m    915[0m     [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m file_exists(filepath_or_buffer)
[1;32m    916[0m ):

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/common.py:716[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    713[0m     codecs[38;5;241m.[39mlookup_error(errors)
[1;32m    715[0m [38;5;66;03m# open URLs[39;00m
[0;32m--> 716[0m ioargs [38;5;241m=[39m [43m_get_filepath_or_buffer[49m[43m([49m
[1;32m    717[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m    718[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    719[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    720[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    721[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    722[0m [43m[49m[43m)[49m
[1;32m    724[0m handle [38;5;241m=[39m ioargs[38;5;241m.[39mfilepath_or_buffer
[1;32m    725[0m handles: [38;5;28mlist[39m[BaseBuffer]

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/common.py:368[0m, in [0;36m_get_filepath_or_buffer[0;34m(filepath_or_buffer, encoding, compression, mode, storage_options)[0m
[1;32m    366[0m [38;5;66;03m# assuming storage_options is to be interpreted as headers[39;00m
[1;32m    367[0m req_info [38;5;241m=[39m urllib[38;5;241m.[39mrequest[38;5;241m.[39mRequest(filepath_or_buffer, headers[38;5;241m=[39mstorage_options)
[0;32m--> 368[0m [38;5;28;01mwith[39;00m [43murlopen[49m[43m([49m[43mreq_info[49m[43m)[49m [38;5;28;01mas[39;00m req:
[1;32m    369[0m     content_encoding [38;5;241m=[39m req[38;5;241m.[39mheaders[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mContent-Encoding[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m    370[0m     [38;5;28;01mif[39;00m content_encoding [38;5;241m==[39m [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m:
[1;32m    371[0m         [38;5;66;03m# Override compression based on Content-Encoding header[39;00m

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/common.py:270[0m, in [0;36murlopen[0;34m(*args, **kwargs)[0m
[1;32m    264[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    265[0m [38;5;124;03mLazy-import wrapper for stdlib urlopen, as that imports a big chunk of[39;00m
[1;32m    266[0m [38;5;124;03mthe stdlib.[39;00m
[1;32m    267[0m [38;5;124;03m"""[39;00m
[1;32m    268[0m [38;5;28;01mimport[39;00m [38;5;21;01murllib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mrequest[39;00m
[0;32m--> 270[0m [38;5;28;01mreturn[39;00m [43murllib[49m[38;5;241;43m.[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:216[0m, in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    214[0m [38;5;28;01melse[39;00m:
[1;32m    215[0m     opener [38;5;241m=[39m _opener
[0;32m--> 216[0m [38;5;28;01mreturn[39;00m [43mopener[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:519[0m, in [0;36mOpenerDirector.open[0;34m(self, fullurl, data, timeout)[0m
[1;32m    516[0m     req [38;5;241m=[39m meth(req)
[1;32m    518[0m sys[38;5;241m.[39maudit([38;5;124m'[39m[38;5;124murllib.Request[39m[38;5;124m'[39m, req[38;5;241m.[39mfull_url, req[38;5;241m.[39mdata, req[38;5;241m.[39mheaders, req[38;5;241m.[39mget_method())
[0;32m--> 519[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_open[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m
[1;32m    521[0m [38;5;66;03m# post-process response[39;00m
[1;32m    522[0m meth_name [38;5;241m=[39m protocol[38;5;241m+[39m[38;5;124m"[39m[38;5;124m_response[39m[38;5;124m"[39m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:536[0m, in [0;36mOpenerDirector._open[0;34m(self, req, data)[0m
[1;32m    533[0m     [38;5;28;01mreturn[39;00m result
[1;32m    535[0m protocol [38;5;241m=[39m req[38;5;241m.[39mtype
[0;32m--> 536[0m result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_chain[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mhandle_open[49m[43m,[49m[43m [49m[43mprotocol[49m[43m,[49m[43m [49m[43mprotocol[49m[43m [49m[38;5;241;43m+[39;49m
[1;32m    537[0m [43m                          [49m[38;5;124;43m'[39;49m[38;5;124;43m_open[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mreq[49m[43m)[49m
[1;32m    538[0m [38;5;28;01mif[39;00m result:
[1;32m    539[0m     [38;5;28;01mreturn[39;00m result

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:496[0m, in [0;36mOpenerDirector._call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    494[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[1;32m    495[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[0;32m--> 496[0m     result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[1;32m    497[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    498[0m         [38;5;28;01mreturn[39;00m result

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:1391[0m, in [0;36mHTTPSHandler.https_open[0;34m(self, req)[0m
[1;32m   1390[0m [38;5;28;01mdef[39;00m [38;5;21mhttps_open[39m([38;5;28mself[39m, req):
[0;32m-> 1391[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdo_open[49m[43m([49m[43mhttp[49m[38;5;241;43m.[39;49m[43mclient[49m[38;5;241;43m.[39;49m[43mHTTPSConnection[49m[43m,[49m[43m [49m[43mreq[49m[43m,[49m
[1;32m   1392[0m [43m        [49m[43mcontext[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_context[49m[43m,[49m[43m [49m[43mcheck_hostname[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_check_hostname[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:1351[0m, in [0;36mAbstractHTTPHandler.do_open[0;34m(self, http_class, req, **http_conn_args)[0m
[1;32m   1348[0m         h[38;5;241m.[39mrequest(req[38;5;241m.[39mget_method(), req[38;5;241m.[39mselector, req[38;5;241m.[39mdata, headers,
[1;32m   1349[0m                   encode_chunked[38;5;241m=[39mreq[38;5;241m.[39mhas_header([38;5;124m'[39m[38;5;124mTransfer-encoding[39m[38;5;124m'[39m))
[1;32m   1350[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m
[0;32m-> 1351[0m         [38;5;28;01mraise[39;00m URLError(err)
[1;32m   1352[0m     r [38;5;241m=[39m h[38;5;241m.[39mgetresponse()
[1;32m   1353[0m [38;5;28;01mexcept[39;00m:

[0;31mURLError[0m: <urlopen error [Errno 8] nodename nor servname provided, or not known>
URLError: <urlopen error [Errno 8] nodename nor servname provided, or not known>

