Traceback (most recent call last):
  File "//anaconda3/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "//anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "//anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "//anaconda3/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "//anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import numpy as np
raw_CPS_data=  pd.read_json('https://data.cityofchicago.org/resource/kh4r-387c.json?$limit=100000')
raw_CPS_data.head() 
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mHTTPError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[6], line 3[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[0;32m----> 3[0m raw_CPS_data[38;5;241m=[39m  [43mpd[49m[38;5;241;43m.[39;49m[43mread_json[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mhttps://data.cityofchicago.org/resource/kh4r-387c.json?$limit=100000[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      4[0m raw_CPS_data[38;5;241m.[39mhead()

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/json/_json.py:760[0m, in [0;36mread_json[0;34m(path_or_buf, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, precise_float, date_unit, encoding, encoding_errors, lines, chunksize, compression, nrows, storage_options, dtype_backend, engine)[0m
[1;32m    757[0m [38;5;28;01mif[39;00m convert_axes [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m orient [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mtable[39m[38;5;124m"[39m:
[1;32m    758[0m     convert_axes [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 760[0m json_reader [38;5;241m=[39m [43mJsonReader[49m[43m([49m
[1;32m    761[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m    762[0m [43m    [49m[43morient[49m[38;5;241;43m=[39;49m[43morient[49m[43m,[49m
[1;32m    763[0m [43m    [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mtyp[49m[43m,[49m
[1;32m    764[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m
[1;32m    765[0m [43m    [49m[43mconvert_axes[49m[38;5;241;43m=[39;49m[43mconvert_axes[49m[43m,[49m
[1;32m    766[0m [43m    [49m[43mconvert_dates[49m[38;5;241;43m=[39;49m[43mconvert_dates[49m[43m,[49m
[1;32m    767[0m [43m    [49m[43mkeep_default_dates[49m[38;5;241;43m=[39;49m[43mkeep_default_dates[49m[43m,[49m
[1;32m    768[0m [43m    [49m[43mprecise_float[49m[38;5;241;43m=[39;49m[43mprecise_float[49m[43m,[49m
[1;32m    769[0m [43m    [49m[43mdate_unit[49m[38;5;241;43m=[39;49m[43mdate_unit[49m[43m,[49m
[1;32m    770[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    771[0m [43m    [49m[43mlines[49m[38;5;241;43m=[39;49m[43mlines[49m[43m,[49m
[1;32m    772[0m [43m    [49m[43mchunksize[49m[38;5;241;43m=[39;49m[43mchunksize[49m[43m,[49m
[1;32m    773[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    774[0m [43m    [49m[43mnrows[49m[38;5;241;43m=[39;49m[43mnrows[49m[43m,[49m
[1;32m    775[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    776[0m [43m    [49m[43mencoding_errors[49m[38;5;241;43m=[39;49m[43mencoding_errors[49m[43m,[49m
[1;32m    777[0m [43m    [49m[43mdtype_backend[49m[38;5;241;43m=[39;49m[43mdtype_backend[49m[43m,[49m
[1;32m    778[0m [43m    [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m
[1;32m    779[0m [43m[49m[43m)[49m
[1;32m    781[0m [38;5;28;01mif[39;00m chunksize:
[1;32m    782[0m     [38;5;28;01mreturn[39;00m json_reader

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/json/_json.py:861[0m, in [0;36mJsonReader.__init__[0;34m(self, filepath_or_buffer, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, precise_float, date_unit, encoding, lines, chunksize, compression, nrows, storage_options, encoding_errors, dtype_backend, engine)[0m
[1;32m    859[0m     [38;5;28mself[39m[38;5;241m.[39mdata [38;5;241m=[39m filepath_or_buffer
[1;32m    860[0m [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mengine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mujson[39m[38;5;124m"[39m:
[0;32m--> 861[0m     data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_data_from_filepath[49m[43m([49m[43mfilepath_or_buffer[49m[43m)[49m
[1;32m    862[0m     [38;5;28mself[39m[38;5;241m.[39mdata [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_preprocess_data(data)

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/json/_json.py:901[0m, in [0;36mJsonReader._get_data_from_filepath[0;34m(self, filepath_or_buffer)[0m
[1;32m    894[0m filepath_or_buffer [38;5;241m=[39m stringify_path(filepath_or_buffer)
[1;32m    895[0m [38;5;28;01mif[39;00m (
[1;32m    896[0m     [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(filepath_or_buffer, [38;5;28mstr[39m)
[1;32m    897[0m     [38;5;129;01mor[39;00m is_url(filepath_or_buffer)
[1;32m    898[0m     [38;5;129;01mor[39;00m is_fsspec_url(filepath_or_buffer)
[1;32m    899[0m     [38;5;129;01mor[39;00m file_exists(filepath_or_buffer)
[1;32m    900[0m ):
[0;32m--> 901[0m     [38;5;28mself[39m[38;5;241m.[39mhandles [38;5;241m=[39m [43mget_handle[49m[43m([49m
[1;32m    902[0m [43m        [49m[43mfilepath_or_buffer[49m[43m,[49m
[1;32m    903[0m [43m        [49m[38;5;124;43m"[39;49m[38;5;124;43mr[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    904[0m [43m        [49m[43mencoding[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mencoding[49m[43m,[49m
[1;32m    905[0m [43m        [49m[43mcompression[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcompression[49m[43m,[49m
[1;32m    906[0m [43m        [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    907[0m [43m        [49m[43merrors[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mencoding_errors[49m[43m,[49m
[1;32m    908[0m [43m    [49m[43m)[49m
[1;32m    909[0m     filepath_or_buffer [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mhandles[38;5;241m.[39mhandle
[1;32m    910[0m [38;5;28;01melif[39;00m (
[1;32m    911[0m     [38;5;28misinstance[39m(filepath_or_buffer, [38;5;28mstr[39m)
[1;32m    912[0m     [38;5;129;01mand[39;00m filepath_or_buffer[38;5;241m.[39mlower()[38;5;241m.[39mendswith(
[0;32m   (...)[0m
[1;32m    915[0m     [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m file_exists(filepath_or_buffer)
[1;32m    916[0m ):

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/common.py:716[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    713[0m     codecs[38;5;241m.[39mlookup_error(errors)
[1;32m    715[0m [38;5;66;03m# open URLs[39;00m
[0;32m--> 716[0m ioargs [38;5;241m=[39m [43m_get_filepath_or_buffer[49m[43m([49m
[1;32m    717[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m    718[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    719[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    720[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    721[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    722[0m [43m[49m[43m)[49m
[1;32m    724[0m handle [38;5;241m=[39m ioargs[38;5;241m.[39mfilepath_or_buffer
[1;32m    725[0m handles: [38;5;28mlist[39m[BaseBuffer]

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/common.py:368[0m, in [0;36m_get_filepath_or_buffer[0;34m(filepath_or_buffer, encoding, compression, mode, storage_options)[0m
[1;32m    366[0m [38;5;66;03m# assuming storage_options is to be interpreted as headers[39;00m
[1;32m    367[0m req_info [38;5;241m=[39m urllib[38;5;241m.[39mrequest[38;5;241m.[39mRequest(filepath_or_buffer, headers[38;5;241m=[39mstorage_options)
[0;32m--> 368[0m [38;5;28;01mwith[39;00m [43murlopen[49m[43m([49m[43mreq_info[49m[43m)[49m [38;5;28;01mas[39;00m req:
[1;32m    369[0m     content_encoding [38;5;241m=[39m req[38;5;241m.[39mheaders[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mContent-Encoding[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m    370[0m     [38;5;28;01mif[39;00m content_encoding [38;5;241m==[39m [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m:
[1;32m    371[0m         [38;5;66;03m# Override compression based on Content-Encoding header[39;00m

File [0;32m//anaconda3/lib/python3.10/site-packages/pandas/io/common.py:270[0m, in [0;36murlopen[0;34m(*args, **kwargs)[0m
[1;32m    264[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    265[0m [38;5;124;03mLazy-import wrapper for stdlib urlopen, as that imports a big chunk of[39;00m
[1;32m    266[0m [38;5;124;03mthe stdlib.[39;00m
[1;32m    267[0m [38;5;124;03m"""[39;00m
[1;32m    268[0m [38;5;28;01mimport[39;00m [38;5;21;01murllib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mrequest[39;00m
[0;32m--> 270[0m [38;5;28;01mreturn[39;00m [43murllib[49m[38;5;241;43m.[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:216[0m, in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    214[0m [38;5;28;01melse[39;00m:
[1;32m    215[0m     opener [38;5;241m=[39m _opener
[0;32m--> 216[0m [38;5;28;01mreturn[39;00m [43mopener[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:525[0m, in [0;36mOpenerDirector.open[0;34m(self, fullurl, data, timeout)[0m
[1;32m    523[0m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocess_response[38;5;241m.[39mget(protocol, []):
[1;32m    524[0m     meth [38;5;241m=[39m [38;5;28mgetattr[39m(processor, meth_name)
[0;32m--> 525[0m     response [38;5;241m=[39m [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[1;32m    527[0m [38;5;28;01mreturn[39;00m response

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:634[0m, in [0;36mHTTPErrorProcessor.http_response[0;34m(self, request, response)[0m
[1;32m    631[0m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[1;32m    632[0m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[1;32m    633[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;241m200[39m [38;5;241m<[39m[38;5;241m=[39m code [38;5;241m<[39m [38;5;241m300[39m):
[0;32m--> 634[0m     response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparent[49m[38;5;241;43m.[39;49m[43merror[49m[43m([49m
[1;32m    635[0m [43m        [49m[38;5;124;43m'[39;49m[38;5;124;43mhttp[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[1;32m    637[0m [38;5;28;01mreturn[39;00m response

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:563[0m, in [0;36mOpenerDirector.error[0;34m(self, proto, *args)[0m
[1;32m    561[0m [38;5;28;01mif[39;00m http_err:
[1;32m    562[0m     args [38;5;241m=[39m ([38;5;28mdict[39m, [38;5;124m'[39m[38;5;124mdefault[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mhttp_error_default[39m[38;5;124m'[39m) [38;5;241m+[39m orig_args
[0;32m--> 563[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_chain[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:496[0m, in [0;36mOpenerDirector._call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    494[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[1;32m    495[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[0;32m--> 496[0m     result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[1;32m    497[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    498[0m         [38;5;28;01mreturn[39;00m result

File [0;32m//anaconda3/lib/python3.10/urllib/request.py:643[0m, in [0;36mHTTPDefaultErrorHandler.http_error_default[0;34m(self, req, fp, code, msg, hdrs)[0m
[1;32m    642[0m [38;5;28;01mdef[39;00m [38;5;21mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[0;32m--> 643[0m     [38;5;28;01mraise[39;00m HTTPError(req[38;5;241m.[39mfull_url, code, msg, hdrs, fp)

[0;31mHTTPError[0m: HTTP Error 500: Server Error
HTTPError: HTTP Error 500: Server Error

